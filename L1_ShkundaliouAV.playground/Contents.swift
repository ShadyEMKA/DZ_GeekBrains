import UIKit

// №1 Задача на решение квадратного уравнения.

let a, b, c, D, x1, x2 : Double //объявляю константы

a = 1.1; b = 3.5; c = 1.8 //задаю значения переменным уравнения вида ax2 + bx + c = 0 (вводятся пользователем)

D = pow(b, 2) - 4 * a * c //нахождение дискрименанта (возведение в степень с помощью pow(значение, степень))

if (D > 0) {
    x1 = (-b + pow(D, 1/2)) / (2 * a)
    x2 = (-b - pow(D, 1/2)) / (2 * a)
    print("Корни уравнения:\nx1 = \(x1)\nx2 = \(x2)\n") //выполнение при дискрименанте больше 0
} else if (D == 0) {
    x1 = (-b) / (2 * a)
    print("Корень уравнения:\nx = \(x1)\n") //выполнение при дискрименанте равным 0
} else {
    print("Уравнение не имеет корней.\n") //выполнение при дискрименанте меньше 0
}

// №2 Задача на площадь, периметр и гипотенузу треугольника.

let katet1, katet2, S, P, gipotenuza : Double // объявляю переменные
    
katet1 = 2.3; katet2 = 6.9 // задаю значение катетов (вводится пользователем)

S = (katet1 * katet2) / 2 // площадь
gipotenuza = pow(pow(katet1, 2) + pow(katet2, 2), 1/2) //гипотенуза
P = katet1 + katet2 + gipotenuza // периметр

print("Гипотенуза треугольника = \(gipotenuza)\nПлощадь треугольника = \(S)\nПериметр треугольника = \(P)\n")

// №3 Задача на сумму вклада через 5 лет.

let vklad, procent : Double // объявляю переменные
let years : Int
var result, sumProcent : Double

vklad = 1000; procent = 5; years = 5 // задаю значения условиям вклада
sumProcent = 0 // начальное значения для подсчёта накопленной суммы от процентов

for _ in 1...years { // цикл для подсчёта суммы от процентов за каждый год
    result = (vklad + sumProcent) * (procent / 100) // сумма от процентов за год
    sumProcent = sumProcent + result
}
print("Итого:\nПри сумме вклада \(vklad) рублей со ставкой в \(procent)% годовых, сумма вклада через 5 лет станет равной \(vklad + sumProcent) рублей.")
